@using EntityLayer.Concrete
@model List<Experience>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_NewAdminLayout.cshtml";
}

<div class="col-md-6">
    <div class="p-2">
        <button type="button" id="btngetlistall" class="btn btn-outline-primary">Verileri Getir</button>
        <button type="button" id="btnadd" class="btn btn-outline-info">Kaydet</button>
        <button type="button" id="btnid" class="btn btn-outline-warning">Id ile Getir</button>
    </div>
</div>

<div class="p-2" id="listexperience">
</div>

<br />

<div class="p-2" id="listbyidexperience">
</div>

<br />

<div class="col-md-12">
    <h5>Ekleme Paneli</h5>
    <input type="text" class="form-control" id="inpname" placeholder="Başlık" />
    <br />
    <input type="text" class="form-control" id="inpdate" placeholder="Tarih" />
</div>
<br />
<div class="col-md-12">
    <h5>Id'ye Göre Getirme Paneli'</h5>
    <input type="text" class="form-control" id="inpid" placeholder="Id Giriniz" />
</div>


@section Scripts
{
    <script>
        //listeleme işlemi
        $("#btngetlistall").click(function () {
            $.ajax({
                contentType: "application/json",
                dataType: "json",
                type: "Get",
                url: "/Experience2/ListExperience/", //actiondan view türetmenden burayı çağırabileceğiz

                success: function (funk) {
                    let values = jQuery.parseJSON(funk); //funktan aldığımız verileri Jsona döndür
                    console.log(values); //valuesdan gelen değeri yazdır

                    let htmlst = "<table class=table table-bordered> <tr> <th> ID </th> <th> Başlık </th> <th> Tarih </th> </tr>"
                    $.each(values, (index, value) => {
                        htmlst += `<tr> <td> ${value.ExperienceID}</td> <td> ${value.Name}</td> <td> ${value.Date}</td> </tr>`
                    }); //valuesun her biri için
                    htmlst += "</table>";
                    $("#listexperience").html(htmlst);
                }
            });
        }); //butonun tetiklendiği isim: getlistall
        //içeriğin türü: dataType
        //let değişken tanımlamak için kullanılır


        //ekleme işlemi
        $("#btnadd").click(function () {
            let values = {
                Name: $("#inpname").val(),
                Date: $("#inpdate").val(),
            };
            $.ajax({
                type: "Post",
                url: "/Experience2/AddExperience/",
                data: values,
                success: function (funk1) {
                    let result = jQuery.parseJSON(funk1);
                    alert(result.Name + "Başarılı bir şekilde eklendi");
                }
            });
        });

        //id'ye göre getirme
        $("#btnid").click(x => {
            let id = $("#inpid").val();

            $.ajax({
                contentType: "application/json",
                dataType: "json",
                type: "get",
                url: "/Experience2/GetById/",
                data: { ExperienceID: id },
                success: function (funk2) {
                    let result = jQuery.parseJSON(funk2);
                    console.log(result);
                    let htmlstr = `<table class=table table-hover> <tr> <th> Deneyim ID </th> <td> ${result.ExperienceID} </td> </tr> <tr> <th> Deneyim Başlığı </th> <td> ${result.Name} </td> </tr> </table`
                    $("#listbyidexperience").html(htmlstr); //tabloyu çağırma
                }
            });
        });
    </script>
}
<script src="~/lib/jquery/dist/jquery.js"></script>